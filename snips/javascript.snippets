# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet "c(onst)?" "const" b
const ${1} = ${2:$1}
endsnippet

snippet "l(et)?" "let" b
let ${1} = ${2:$1}
endsnippet

snippet "i(mport|mp|m)?" "import" br
import ${1} from '${2:./}${3:$1}';
endsnippet

snippet r "return"
return ${0:result;}
endsnippet

snippet =>> "inline arrow function" A
(${1:args}) => ($2);
endsnippet

snippet => "arrow function"
(${1:args}) => {
	return $3;
}${2:;}
endsnippet

snippet c=> "const Function" bA
const ${1:name} = (${2:args}) => {
	return $4;
}${3:;}
endsnippet

snippet cl "console.log(...)"
console.log('${2:$1: }', ${1});
endsnippet
